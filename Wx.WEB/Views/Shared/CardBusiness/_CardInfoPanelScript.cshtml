@using Wx.WEB.Core.ViewModels

@model CardBusinessRule
@{
    string costList = string.IsNullOrEmpty(@Model.CostList) ? "[]" : @Model.CostList;
}
<script type="text/javascript">

    costList = @Html.Raw(costList);
    readCardRequest = @Html.Raw(Model.ReadCardRquest);
    var jsonClear = { Reports: { total: 0, rows: [] }, ResponseStatus: { ErrorCode: 'OK', Errors: [] } };
    BeginReadCardFunc = function() {
        return @Html.Raw(Model.BeginReadCardFunc);
    }

    EndReadCardFunc = function () {
        @Html.Raw(Model.EndReadCardFunc)
        setTimeout(function(){$.messager.progress('close');}, 1000);
    }

    ReadCardFunc = function() {
        $.wx.easyui.info.clear();
        $.messager.progress({ title: '正在处理中', msg: '正在处理中...' });
        if (!BeginReadCardFunc()) {
            return false;
        }
        readCardRequest.IsReadDB = false;
        $('#hidIsReadDB').val(false);
        GetCardRequest();
        return true;
    }

    ReadDBCardFunc = function () {
        $.wx.easyui.info.clear();
        $.messager.progress({ title: '正在处理中', msg: '正在处理中...' });
        readCardRequest.CardNo = $('#CardNo').val();
        readCardRequest.IsReadDB=true;
        $('#hidIsReadDB').val(true);
        GetCardRequest();
    }


    function GetCardRequest(){
        readCardRequest.CostList =  @Html.Raw(costList);
        //console.log(JSON.stringify(readCardRequest));
        $.ajax({ type: "POST",
            url:"@Url.Action(Model.ReadCardFunc)",
            contentType: 'application/json; charset=utf-8',
            data:JSON.stringify(readCardRequest),
            success :function (result) {
                readCardRequest = @Html.Raw(Model.ReadCardRquest) ;
                if(result){
                    readCardResponse = result;
                    if(result.ResponseStatus.ErrorCode === 'OK'){
                        BindForm(result);
                        BindCustomerInfo(result.Customer);
                        costList = result.CostList;
                        BindCostList();
                        $('#hideCardNo').val(result.CardNo);
                        $('#btnSubmit').linkbutton('enable');
                        $('#btnPrint').linkbutton('disable');
                        if( $('#hidIsReadDB').val()=="true")
                        {
                            setTimeout(function(){$.messager.progress('close');}, 1000);
                        }
                        else
                        {
                            EndReadCardFunc();
                        }
                        $('#gridQuery').datagrid('loadData', jsonClear);
                    }
                    else {
                        ClearAll();
                        var errors ='';
                        $.each(result.ResponseStatus.Errors,function(i,o){
                            errors = errors + "<li>"+ (o.ErrorCode != null ? o.ErrorCode + ':':'') +  o.Message +"</li>";
                            if (o.ErrorCode === 'BLACK_CARD_LIST') {
                                lockCard();
                            }
                        });
                        $.wx.easyui.msg.error(errors,'错误');
                    }
                }
                //console.log(result);
            }});
    }
    function ClearAll() {
        var cardNo = $('#CardNo').val();
        $("span[class='textbox']").find("input[type='text']").each(function(){
            $(this).val("");
        });

        $("select").each(function(){
            $(this).combobox('setValue','');
        });

        $('#CardNo').textbox('setValue', cardNo);
    }
</script> 